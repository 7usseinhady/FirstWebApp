@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> locOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();

    var cultureItems = locOptions?.Value?.SupportedUICultures!
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName.Replace("(مصر)", "") })
        .ToList();

    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
    returnUrl = returnUrl + Context.Request.QueryString;
    //var x = @$"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}"
}

<div title="@localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" method="POST" asp-controller="Culture" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl">
        <select id="smallSelect" class="form-select form-select-sm" name="culture" asp-for="@requestCulture!.RequestCulture.UICulture.Name" asp-items="cultureItems"  onchange="this.form.submit();">
        </select>


       
    </form>
</div>