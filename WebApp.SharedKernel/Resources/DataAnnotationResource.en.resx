<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Acceptance" xml:space="preserve">
    <value>Acceptance</value>
  </data>
  <data name="AdditionalCost" xml:space="preserve">
    <value>Additional Cost</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ArabicAddress" xml:space="preserve">
    <value>Arabic Address</value>
  </data>
  <data name="Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="Bio" xml:space="preserve">
    <value>Bio</value>
  </data>
  <data name="Body" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="BodyAr" xml:space="preserve">
    <value>Arabic Body</value>
  </data>
  <data name="BodyEn" xml:space="preserve">
    <value>English Body</value>
  </data>
  <data name="BriefSummary" xml:space="preserve">
    <value>Brief Summary</value>
  </data>
  <data name="Canceld" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="Cancelling" xml:space="preserve">
    <value>Cancelling</value>
  </data>
  <data name="CityName" xml:space="preserve">
    <value>City Name</value>
  </data>
  <data name="CommercialRegistrationNo" xml:space="preserve">
    <value>Commercial Registration Number</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="CompletenessStatus" xml:space="preserve">
    <value>Completeness Status</value>
  </data>
  <data name="CompletionState" xml:space="preserve">
    <value>Completion State</value>
  </data>
  <data name="Confirmed" xml:space="preserve">
    <value>Confirmed</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="CustomerEmail" xml:space="preserve">
    <value>Customer Email</value>
  </data>
  <data name="CustomerEvent" xml:space="preserve">
    <value>Customer Event</value>
  </data>
  <data name="CustomerEventService" xml:space="preserve">
    <value>Customer Event Service</value>
  </data>
  <data name="CustomerName" xml:space="preserve">
    <value>Customer Name</value>
  </data>
  <data name="CustomerPhoneNumber" xml:space="preserve">
    <value>Customer Phone Number</value>
  </data>
  <data name="DateFrom" xml:space="preserve">
    <value>DateFrom</value>
  </data>
  <data name="DateTo" xml:space="preserve">
    <value>DateTo</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionAr" xml:space="preserve">
    <value>Arabic Description</value>
  </data>
  <data name="DescriptionEn" xml:space="preserve">
    <value>English Description</value>
  </data>
  <data name="DistrictName" xml:space="preserve">
    <value>District Name</value>
  </data>
  <data name="DoneSuccessfully" xml:space="preserve">
    <value>Done Successfully</value>
  </data>
  <data name="Editability" xml:space="preserve">
    <value>Editability</value>
  </data>
  <data name="EditReason" xml:space="preserve">
    <value>Editing Reason</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EnglishAddress" xml:space="preserve">
    <value>English Address</value>
  </data>
  <data name="EventDate" xml:space="preserve">
    <value>Event Date</value>
  </data>
  <data name="EventDateFrom" xml:space="preserve">
    <value>Event Date From</value>
  </data>
  <data name="EventDateTo" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="EventEndDate" xml:space="preserve">
    <value>Event End Date</value>
  </data>
  <data name="EventEndTime" xml:space="preserve">
    <value>Event End Time</value>
  </data>
  <data name="EventName" xml:space="preserve">
    <value>Event Name</value>
  </data>
  <data name="EventServiceStatus" xml:space="preserve">
    <value>Event Service Status</value>
  </data>
  <data name="EventStartDate" xml:space="preserve">
    <value>Event Start Date</value>
  </data>
  <data name="EventStartTime" xml:space="preserve">
    <value>Event Start Time</value>
  </data>
  <data name="EventStatus" xml:space="preserve">
    <value>Event Status</value>
  </data>
  <data name="EventType" xml:space="preserve">
    <value>Event Type</value>
  </data>
  <data name="FacebookLink" xml:space="preserve">
    <value>Facebook Link</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="ForcedUpdate" xml:space="preserve">
    <value>Forced Update</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Guest Number" xml:space="preserve">
    <value>Guest Numbers</value>
  </data>
  <data name="GuestNumber" xml:space="preserve">
    <value>Guests Number</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="HoursNumber" xml:space="preserve">
    <value>HoursNumber</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="InstagramLink" xml:space="preserve">
    <value>Instagram Link</value>
  </data>
  <data name="Interval" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="IntervalNumber" xml:space="preserve">
    <value>IntervalNumber</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value> Invalid</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="NameAr" xml:space="preserve">
    <value>Arabic Name</value>
  </data>
  <data name="NameEn" xml:space="preserve">
    <value>English Name</value>
  </data>
  <data name="NationalAddress" xml:space="preserve">
    <value>National Address</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="Not Match" xml:space="preserve">
    <value>Not Match</value>
  </data>
  <data name="NotificationPageName" xml:space="preserve">
    <value>NotificationPageName</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="PaidAmount" xml:space="preserve">
    <value>Paid Amount</value>
  </data>
  <data name="PaidAmountAfterFilter" xml:space="preserve">
    <value>Paid Amount After Filter</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordRegularExpression" xml:space="preserve">
    <value>A minimum 6 characters password contains a combination of uppercase ,lowercase letter , special character and number.</value>
  </data>
  <data name="Paying" xml:space="preserve">
    <value>Paying</value>
  </data>
  <data name="PaymentStatus" xml:space="preserve">
    <value>Payment Status</value>
  </data>
  <data name="PersonalKey" xml:space="preserve">
    <value>Email, username or phone number</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>PhoneNumber</value>
  </data>
  <data name="SecondPhoneNumber" xml:space="preserve">
    <value>Phone Number 2</value>
  </data>
  <data name="PhoneRegularExpression" xml:space="preserve">
    <value>Phone number must start with 05</value>
  </data>
  <data name="PreprationPeriod" xml:space="preserve">
    <value>Prep Period in hours</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="RateComment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Rates" xml:space="preserve">
    <value>Rates</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="ReferenceNumber" xml:space="preserve">
    <value>Reference Number</value>
  </data>
  <data name="RegionName" xml:space="preserve">
    <value>Region Name</value>
  </data>
  <data name="RejectReason" xml:space="preserve">
    <value>Rejection Reason</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="ResponseStatus" xml:space="preserve">
    <value>Response Status</value>
  </data>
  <data name="ServiceCategoryName" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ServiceCost" xml:space="preserve">
    <value>Service Cost</value>
  </data>
  <data name="ServiceName" xml:space="preserve">
    <value>Service Name</value>
  </data>
  <data name="ServicesNo" xml:space="preserve">
    <value>Services Number</value>
  </data>
  <data name="ServicesNoAfterFilter" xml:space="preserve">
    <value>Services Number After Filter</value>
  </data>
  <data name="ServiceTitle" xml:space="preserve">
    <value>Service Title</value>
  </data>
  <data name="ServiceTitleAr" xml:space="preserve">
    <value>Service Arabic Title</value>
  </data>
  <data name="ServiceTitleEn" xml:space="preserve">
    <value>Service English Title</value>
  </data>
  <data name="SettingValue" xml:space="preserve">
    <value>Setting Value</value>
  </data>
  <data name="SiteType" xml:space="preserve">
    <value>Site Type</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusDate" xml:space="preserve">
    <value>Status Date</value>
  </data>
  <data name="StoreAddress" xml:space="preserve">
    <value>Store Address</value>
  </data>
  <data name="StoreName" xml:space="preserve">
    <value>Store Name</value>
  </data>
  <data name="SupplierName" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="Suppliers" xml:space="preserve">
    <value>Suppliers</value>
  </data>
  <data name="TaxCardNo" xml:space="preserve">
    <value>Tax Card Number</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TitleAr" xml:space="preserve">
    <value>Arabic Title</value>
  </data>
  <data name="TitleEn" xml:space="preserve">
    <value>English Title</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="TokenCode" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="TotalPaidAmount" xml:space="preserve">
    <value>Total Paid Amount</value>
  </data>
  <data name="TotalPrice" xml:space="preserve">
    <value>TotalPrice</value>
  </data>
  <data name="TotalServicesNo" xml:space="preserve">
    <value>Total Services Number</value>
  </data>
  <data name="TransactionDateFrom" xml:space="preserve">
    <value>Transaction Date From</value>
  </data>
  <data name="TransactionTime" xml:space="preserve">
    <value>Transaction Time</value>
  </data>
  <data name="TransactionType" xml:space="preserve">
    <value>Transaction Type</value>
  </data>
  <data name="TwitterLink" xml:space="preserve">
    <value>Twitter Link</value>
  </data>
  <data name="Uneditable" xml:space="preserve">
    <value>Uneditable</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>UnitPrice</value>
  </data>
  <data name="Units" xml:space="preserve">
    <value>Units</value>
  </data>
  <data name="UnitsNumber" xml:space="preserve">
    <value>Units Number</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="VersionNumber" xml:space="preserve">
    <value>Version Number</value>
  </data>
  <data name="WebAppLink" xml:space="preserve">
    <value>WebApp Link</value>
  </data>
</root>